#! /usr/bin/php
<?php
/**
 * RebuildArchive
 *
 * @package PhotoSort
 */

//require_once 'profiling.php';

if (!isset($_SERVER['argv'][1])) {
  echo "usage RebuildArchive <path to archive>\n";
  exit();
}

$sPath = trim($_SERVER['argv'][1]);
if (
  !file_exists($sPath) ||
  !is_dir($sPath) ||
  !is_readable($sPath)
) {
  echo "Unable to read $sPath for indexing\n";
  exit();
}

require_once 'src/archive/interfaces.php';
require_once 'src/scanner/interfaces.php';
require_once 'src/utility/interfaces.php';
require_once 'src/archive/Indexer.php';
require_once 'src/archive/ImageMetaHasher.php';
require_once 'src/archive/DuplicatePhotoResolver.php';
require_once 'src/scanner/Visitor.php';
require_once 'src/scanner/RecursiveDirectoryScanner.php';

// Create the Indexer
$oIndexer = new \PhotoSort\Archive\Indexer(
  new \PhotoSort\Archive\DuplicatePhotoResolver(),
  new \PhotoSort\Archive\ImageMetaHasher()
);

// Create the Visitor
$oVisitor = new \PhotoSort\Scanner\Visitor($oIndexer);

// Create the Scanner and Go!
$oDirectoryScanner = new \PhotoSort\Scanner\RecursiveDirectoryScanner();
$oDirectoryScanner
  ->addDirectoryVisitor($oVisitor)
  ->addFileVisitor($oVisitor)
  ->scan($sPath);

// Save the index
$oIndexer
  ->showStats()
  ->writeIndex("data/archive.index");
